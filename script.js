// --- –õ–û–ì–ò–ö–ê –ö–û–ù–°–¢–†–£–ö–¢–û–†–ê –¢–û–†–¢–ê ---

// –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤—Å—è HTML-—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
document.addEventListener('DOMContentLoaded', () => {
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –Ω—É–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const constructorSteps = document.querySelectorAll('.constructor-step .options-grid');
    const totalPriceElement = document.getElementById('total-price');

    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ü–µ–Ω
    const state = {
        base: 0,
        filling: 0,
        cream: 0,
        decoration: 0
    };

    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —à–∞–≥—É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ (–æ—Å–Ω–æ–≤—ã, –Ω–∞—á–∏–Ω–∫–∏, –∫—Ä–µ–º—ã, –¥–µ–∫–æ—Ä)
    constructorSteps.forEach(step => {
        const options = step.querySelectorAll('.option');
        const stepId = step.id; // –ü–æ–ª—É—á–∞–µ–º id —à–∞–≥–∞: 'bases', 'fillings' –∏–ª–∏ 'creams'

        // –î–ª—è –∫–∞–∂–¥–æ–π –æ–ø—Ü–∏–∏ –≤ —à–∞–≥–µ –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
        options.forEach(option => {
            option.addEventListener('click', () => {
                // –°–Ω–∞—á–∞–ª–∞ —É–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å 'selected' —É –≤—Å–µ—Ö –æ–ø—Ü–∏–π –≤ —ç—Ç–æ–º —à–∞–≥–µ
                options.forEach(o => o.classList.remove('selected'));
                
                // –ó–∞—Ç–µ–º –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å 'selected' —Ç–æ–ª—å–∫–æ –∫ —Ç–æ–π, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –∫–ª–∏–∫–Ω—É–ª–∏
                option.classList.add('selected');

                // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–æ–≤—ã–π —à–∞–≥ decorations
                let stateKey = stepId;
                if (stepId === 'bases') stateKey = 'base';
                else if (stepId === 'fillings') stateKey = 'filling';
                else if (stepId === 'creams') stateKey = 'cream';
                else if (stepId === 'decorations') stateKey = 'decoration';
                
                state[stateKey] = parseInt(option.dataset.price);
                
                // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–µ—Ä–µ—Å—á–µ—Ç–∞ –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
                updateTotalPrice();
            });
        });
    });

    // –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç–∞–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏—Ç–æ–≥–æ–≤—É—é —Ü–µ–Ω—É
    function updateTotalPrice() {
        const total = state.base + state.filling + state.cream + state.decoration;
        totalPriceElement.textContent = `${total} ‚ÇΩ`;
    }
});

// --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã (–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ) ---
const form = document.querySelector('.contact-form');

form.addEventListener('submit', (e) => {
    e.preventDefault(); // –û—Ç–º–µ–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã, —á—Ç–æ–±—ã —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–ª–∞—Å—å
    
    // –°–æ–∑–¥–∞–µ–º —Å—Ç–∏–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification('‚ú® –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!');
    
    form.reset(); // –û—á–∏—â–∞–µ–º –ø–æ–ª—è —Ñ–æ—Ä–º—ã –ø–æ—Å–ª–µ "–æ—Ç–ø—Ä–∞–≤–∫–∏"
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∏–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(message) {
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const notification = document.createElement('div');
    notification.className = 'notification';
    notification.textContent = message;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: linear-gradient(45deg, #FF69B4, #FF1493, #DC143C);
        color: white;
        padding: 15px 20px;
        border-radius: 10px;
        box-shadow: 0 10px 30px rgba(255, 20, 147, 0.4);
        font-family: 'Jost', sans-serif;
        font-weight: bold;
        z-index: 1000;
        animation: slideIn 0.3s ease, fadeOut 0.3s ease 2.7s;
        transform: translateX(100%);
        opacity: 0;
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
    const style = document.createElement('style');
    style.textContent = `
        @keyframes slideIn {
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
        @keyframes fadeOut {
            to {
                opacity: 0;
                transform: translateX(100%);
            }
        }
    `;
    document.head.appendChild(style);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    document.body.appendChild(notification);
    
    // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        document.body.removeChild(notification);
        document.head.removeChild(style);
    }, 3000);
}

// –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–µ—Å–µ—Ä—Ç–æ–≤
const dessertsData = {
    tiramisu: {
        emoji: 'üç∞',
        title: '–¢–∏—Ä–∞–º–∏—Å—É',
        price: '850 ‚ÇΩ',
        description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –¥–µ—Å–µ—Ä—Ç —Å –Ω–µ–∂–Ω—ã–º–∏ –±–∏—Å–∫–≤–∏—Ç–Ω—ã–º–∏ –∫–æ—Ä–∂–∞–º–∏, –ø—Ä–æ–ø–∏—Ç–∞–Ω–Ω—ã–º–∏ –∫–æ—Ñ–µ –∏ –ª–∏–∫–µ—Ä–æ–º, —Å –≤–æ–∑–¥—É—à–Ω—ã–º –∫—Ä–µ–º–æ–º –º–∞—Å–∫–∞—Ä–ø–æ–Ω–µ.',
        ingredients: [
            '–ë–∏—Å–∫–≤–∏—Ç–Ω—ã–µ —Å–∞–≤–æ—è—Ä–¥–∏',
            '–ö—Ä–µ–º –º–∞—Å–∫–∞—Ä–ø–æ–Ω–µ',
            '–≠—Å–ø—Ä–µ—Å—Å–æ',
            '–õ–∏–∫–µ—Ä –ê–º–∞—Ä–µ—Ç—Ç–æ',
            '–ö–∞–∫–∞–æ-–ø–æ—Ä–æ—à–æ–∫',
            '–ö—É—Ä–∏–Ω—ã–µ –∂–µ–ª—Ç–∫–∏',
            '–°–∞—Ö–∞—Ä'
        ]
    },
    cheesecake: {
        emoji: 'üç∞',
        title: '–ß–∏–∑–∫–µ–π–∫',
        price: '750 ‚ÇΩ',
        description: '–ù–µ–∂–Ω—ã–π —Å—ã—Ä–Ω—ã–π —Ç–æ—Ä—Ç –Ω–∞ –ø–µ—Å–æ—á–Ω–æ–π –æ—Å–Ω–æ–≤–µ —Å –≤–∞–Ω–∏–ª—å–Ω—ã–º –∞—Ä–æ–º–∞—Ç–æ–º –∏ —è–≥–æ–¥–Ω—ã–º —Ç–æ–ø–ø–∏–Ω–≥–æ–º.',
        ingredients: [
            '–¢–≤–æ—Ä–æ–∂–Ω—ã–π —Å—ã—Ä',
            '–ü–µ—Å–æ—á–Ω–æ–µ –ø–µ—á–µ–Ω—å–µ',
            '–°–ª–∏–≤–æ—á–Ω–æ–µ –º–∞—Å–ª–æ',
            '–í–∞–Ω–∏–ª—å–Ω—ã–π —ç–∫—Å—Ç—Ä–∞–∫—Ç',
            '–°–≤–µ–∂–∏–µ —è–≥–æ–¥—ã',
            '–°–∞—Ö–∞—Ä',
            '–Ø–π—Ü–∞'
        ]
    },
    napoleon: {
        emoji: 'ü•ß',
        title: '–ù–∞–ø–æ–ª–µ–æ–Ω',
        price: '680 ‚ÇΩ',
        description: '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —Ä—É—Å—Å–∫–∏–π —Ç–æ—Ä—Ç —Å —Ö—Ä—É—Å—Ç—è—â–∏–º–∏ —Å–ª–æ–µ–Ω—ã–º–∏ –∫–æ—Ä–∂–∞–º–∏ –∏ –Ω–µ–∂–Ω—ã–º –∑–∞–≤–∞—Ä–Ω—ã–º –∫—Ä–µ–º–æ–º.',
        ingredients: [
            '–°–ª–æ–µ–Ω–æ–µ —Ç–µ—Å—Ç–æ',
            '–ó–∞–≤–∞—Ä–Ω–æ–π –∫—Ä–µ–º',
            '–ú–æ–ª–æ–∫–æ',
            '–Ø–π—Ü–∞',
            '–°–∞—Ö–∞—Ä',
            '–ú—É–∫–∞',
            '–í–∞–Ω–∏–ª–∏–Ω'
        ]
    },
    medovik: {
        emoji: 'üçØ',
        title: '–ú–µ–¥–æ–≤–∏–∫',
        price: '720 ‚ÇΩ',
        description: '–ê—Ä–æ–º–∞—Ç–Ω—ã–π –º–µ–¥–æ–≤—ã–π —Ç–æ—Ä—Ç —Å —Ç–æ–Ω–∫–∏–º–∏ –∫–æ—Ä–∂–∞–º–∏ –∏ —Å–º–µ—Ç–∞–Ω–Ω—ã–º –∫—Ä–µ–º–æ–º, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤–∫—É—Å–Ω–µ–µ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º.',
        ingredients: [
            '–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –º–µ–¥',
            '–°–º–µ—Ç–∞–Ω–Ω—ã–π –∫—Ä–µ–º',
            '–ú—É–∫–∞',
            '–°–æ–¥–∞',
            '–Ø–π—Ü–∞',
            '–°–∞—Ö–∞—Ä',
            '–°–º–µ—Ç–∞–Ω–∞'
        ]
    },
    redvelvet: {
        emoji: '‚ù§Ô∏è',
        title: '–ö—Ä–∞—Å–Ω—ã–π –±–∞—Ä—Ö–∞—Ç',
        price: '920 ‚ÇΩ',
        description: '–ò–∑—ã—Å–∫–∞–Ω–Ω—ã–π —Ç–æ—Ä—Ç —Å —è—Ä–∫–æ-–∫—Ä–∞—Å–Ω—ã–º–∏ –±–∏—Å–∫–≤–∏—Ç–Ω—ã–º–∏ –∫–æ—Ä–∂–∞–º–∏ –∏ –∫—Ä–µ–º–æ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–∏–≤–æ—á–Ω–æ–≥–æ —Å—ã—Ä–∞.',
        ingredients: [
            '–ö—Ä–∞—Å–Ω—ã–π –ø–∏—â–µ–≤–æ–π –∫—Ä–∞—Å–∏—Ç–µ–ª—å',
            '–ö—Ä–µ–º-—á–∏–∑',
            '–ö–∞–∫–∞–æ-–ø–æ—Ä–æ—à–æ–∫',
            '–ü–∞—Ö—Ç–∞',
            '–í–∞–Ω–∏–ª—å–Ω—ã–π —ç–∫—Å—Ç—Ä–∞–∫—Ç',
            '–°–∞—Ö–∞—Ä',
            '–Ø–π—Ü–∞'
        ]
    },
    chocolate: {
        emoji: 'üç´',
        title: '–®–æ–∫–æ–ª–∞–¥–Ω—ã–π —Ç–æ—Ä—Ç',
        price: '800 ‚ÇΩ',
        description: '–ë–æ–≥–∞—Ç—ã–π —à–æ–∫–æ–ª–∞–¥–Ω—ã–π —Ç–æ—Ä—Ç —Å —Ç—Ä–µ–º—è –≤–∏–¥–∞–º–∏ —à–æ–∫–æ–ª–∞–¥–∞ –∏ –≥–∞–Ω–∞—à–µ–º.',
        ingredients: [
            '–¢–µ–º–Ω—ã–π —à–æ–∫–æ–ª–∞–¥',
            '–ú–æ–ª–æ—á–Ω—ã–π —à–æ–∫–æ–ª–∞–¥',
            '–ë–µ–ª—ã–π —à–æ–∫–æ–ª–∞–¥',
            '–®–æ–∫–æ–ª–∞–¥–Ω—ã–π –≥–∞–Ω–∞—à',
            '–°–ª–∏–≤–∫–∏',
            '–ö–∞–∫–∞–æ-–ø–æ—Ä–æ—à–æ–∫',
            '–Ø–π—Ü–∞'
        ]
    },
    strawberry: {
        emoji: 'üçì',
        title: '–ö–ª—É–±–Ω–∏—á–Ω—ã–π –º—É—Å—Å',
        price: '780 ‚ÇΩ',
        description: '–õ–µ–≥–∫–∏–π –≤–æ–∑–¥—É—à–Ω—ã–π –º—É—Å—Å —Å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–π –∫–ª—É–±–Ω–∏–∫–æ–π –∏ –≤–∞–Ω–∏–ª—å–Ω—ã–º –±–∏—Å–∫–≤–∏—Ç–æ–º.',
        ingredients: [
            '–°–≤–µ–∂–∞—è –∫–ª—É–±–Ω–∏–∫–∞',
            '–í–∞–Ω–∏–ª—å–Ω—ã–π –±–∏—Å–∫–≤–∏—Ç',
            '–ñ–µ–ª–∞—Ç–∏–Ω',
            '–°–ª–∏–≤–∫–∏',
            '–°–∞—Ö–∞—Ä',
            '–õ–∏–º–æ–Ω–Ω—ã–π —Å–æ–∫',
            '–ú—è—Ç–∞'
        ]
    },
    lemon: {
        emoji: 'üçã',
        title: '–õ–∏–º–æ–Ω–Ω—ã–π —Ç–∞—Ä—Ç',
        price: '650 ‚ÇΩ',
        description: '–û—Å–≤–µ–∂–∞—é—â–∏–π —Ç–∞—Ä—Ç —Å –ª–∏–º–æ–Ω–Ω—ã–º –∫—É—Ä–¥–æ–º –Ω–∞ –ø–µ—Å–æ—á–Ω–æ–π –æ—Å–Ω–æ–≤–µ, —É–∫—Ä–∞—à–µ–Ω–Ω—ã–π –º–µ—Ä–µ–Ω–≥–æ–π.',
        ingredients: [
            '–õ–∏–º–æ–Ω–Ω—ã–π –∫—É—Ä–¥',
            '–ü–µ—Å–æ—á–Ω–æ–µ —Ç–µ—Å—Ç–æ',
            '–õ–∏–º–æ–Ω–Ω–∞—è —Ü–µ–¥—Ä–∞',
            '–ú–µ—Ä–µ–Ω–≥–∞',
            '–°–ª–∏–≤–æ—á–Ω–æ–µ –º–∞—Å–ª–æ',
            '–Ø–π—Ü–∞',
            '–°–∞—Ö–∞—Ä'
        ]
    },
    eclair: {
        emoji: 'ü•ê',
        title: '–≠–∫–ª–µ—Ä—ã',
        price: '450 ‚ÇΩ',
        description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–µ –ø–∏—Ä–æ–∂–Ω—ã–µ –∏–∑ –∑–∞–≤–∞—Ä–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ —Å –≤–∞–Ω–∏–ª—å–Ω—ã–º –∫—Ä–µ–º–æ–º –∏ —à–æ–∫–æ–ª–∞–¥–Ω–æ–π –≥–ª–∞–∑—É—Ä—å—é.',
        ingredients: [
            '–ó–∞–≤–∞—Ä–Ω–æ–µ —Ç–µ—Å—Ç–æ',
            '–í–∞–Ω–∏–ª—å–Ω—ã–π –∫—Ä–µ–º',
            '–®–æ–∫–æ–ª–∞–¥–Ω–∞—è –≥–ª–∞–∑—É—Ä—å',
            '–ú–æ–ª–æ–∫–æ',
            '–Ø–π—Ü–∞',
            '–°–ª–∏–≤–æ—á–Ω–æ–µ –º–∞—Å–ª–æ',
            '–ú—É–∫–∞'
        ]
    },
    macarons: {
        emoji: 'üå∏',
        title: '–ú–∞–∫–∞—Ä—É–Ω—ã',
        price: '380 ‚ÇΩ',
        description: '–ù–µ–∂–Ω—ã–µ —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–µ –º–∏–Ω–¥–∞–ª—å–Ω—ã–µ –ø–∏—Ä–æ–∂–Ω—ã–µ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –≤–∫—É—Å–∞–º–∏ –Ω–∞—á–∏–Ω–æ–∫.',
        ingredients: [
            '–ú–∏–Ω–¥–∞–ª—å–Ω–∞—è –º—É–∫–∞',
            '–Ø–∏—á–Ω—ã–µ –±–µ–ª–∫–∏',
            '–°–∞—Ö–∞—Ä–Ω–∞—è –ø—É–¥—Ä–∞',
            '–ì–∞–Ω–∞—à —Ä–∞–∑–Ω—ã—Ö –≤–∫—É—Å–æ–≤',
            '–ü–∏—â–µ–≤—ã–µ –∫—Ä–∞—Å–∏—Ç–µ–ª–∏',
            '–í–∞–Ω–∏–ª—å–Ω—ã–π —ç–∫—Å—Ç—Ä–∞–∫—Ç'
        ]
    }
};

// –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
document.addEventListener('DOMContentLoaded', () => {
    const modal = document.getElementById('modal');
    const modalClose = document.querySelector('.modal-close');
    const dessertCards = document.querySelectorAll('.dessert-card');
    
    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    dessertCards.forEach(card => {
        card.addEventListener('click', () => {
            const dessertId = card.getAttribute('data-dessert');
            const dessertInfo = dessertsData[dessertId];
            
            if (dessertInfo) {
                // –ó–∞–ø–æ–ª–Ω—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–∞–Ω–Ω—ã–º–∏
                document.getElementById('modal-emoji').textContent = dessertInfo.emoji;
                document.getElementById('modal-title').textContent = dessertInfo.title;
                document.getElementById('modal-price').textContent = dessertInfo.price;
                document.getElementById('modal-description').textContent = dessertInfo.description;
                
                // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
                const ingredientsList = document.getElementById('ingredients-list');
                ingredientsList.innerHTML = '';
                dessertInfo.ingredients.forEach(ingredient => {
                    const li = document.createElement('li');
                    li.textContent = ingredient;
                    ingredientsList.appendChild(li);
                });
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                modal.style.display = 'block';
                document.body.style.overflow = 'hidden';
            }
        });
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modalClose.addEventListener('click', () => {
        modal.style.display = 'none';
        document.body.style.overflow = 'auto';
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    window.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.style.display = 'none';
            document.body.style.overflow = 'auto';
        }
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫–∞–∑–∞
    document.querySelector('.order-button').addEventListener('click', () => {
        const dessertTitle = document.getElementById('modal-title').textContent;
        showNotification(`‚ú® ${dessertTitle} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!`);
        modal.style.display = 'none';
        document.body.style.overflow = 'auto';
    });
});

// GSAP –∞–Ω–∏–º–∞—Ü–∏—è —Å–±–æ—Ä–∫–∏ —Ç–æ—Ä—Ç–∞
function createCakeAnimation() {
    if (typeof gsap === 'undefined') {
        console.error('GSAP –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
        return;
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
    gsap.set(['.intro-simple-title'], {
        opacity: 0
    });

    // –°–æ–∑–¥–∞–µ–º timeline –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
    const tl = gsap.timeline();

    // 1. –ü–æ—è–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    tl.fromTo('.cake-plate', 
        {
            opacity: 0,
            scale: 0.3,
            rotationX: -90
        },
        {
            duration: 1,
            opacity: 1,
            scale: 1,
            rotationX: 0,
            ease: "back.out(1.7)"
        }
    )

    // 2. –ü–æ—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —Å–ª–æ—è (—Å–Ω–∏–∑—É)
    .fromTo('.layer-1', 
        {
            opacity: 0,
            y: 100,
            scale: 0.5,
            rotationX: -45
        },
        {
            duration: 1.2,
            opacity: 1,
            y: 0,
            scale: 1,
            rotationX: 0,
            ease: "bounce.out"
        }, 
        "-=0.3"
    )

    // 3. –ü–æ—è–≤–ª–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ —Å–ª–æ—è
    .fromTo('.layer-2', 
        {
            opacity: 0,
            y: -50,
            scale: 0.3,
            rotation: 10
        },
        {
            duration: 1.2,
            opacity: 1,
            y: 0,
            scale: 1,
            rotation: 0,
            ease: "elastic.out(1, 0.5)"
        }, 
        "-=0.4"
    )

    // 4. –ü–æ—è–≤–ª–µ–Ω–∏–µ —Ç—Ä–µ—Ç—å–µ–≥–æ —Å–ª–æ—è
    .fromTo('.layer-3', 
        {
            opacity: 0,
            y: -80,
            scale: 0.2,
            rotation: -15
        },
        {
            duration: 1,
            opacity: 1,
            y: 0,
            scale: 1,
            rotation: 0,
            ease: "back.out(2)"
        }, 
        "-=0.6"
    )

    // 5. –ü–æ—è–≤–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤—ã –∫—Ä–µ–º–∞
    .fromTo('.cream-main', 
        {
            opacity: 0,
            scale: 0,
            y: -30
        },
        {
            duration: 0.8,
            opacity: 1,
            scale: 1,
            y: 0,
            ease: "bounce.out"
        }, 
        "-=0.2"
    )

    // 6. –ü–æ—è–≤–ª–µ–Ω–∏–µ –∫–∞–ø–µ–ª—å –∫—Ä–µ–º–∞ (–ø–æ –æ—á–µ—Ä–µ–¥–∏)
    .fromTo('.cream-drop', 
        {
            opacity: 0,
            scale: 0,
            y: -50
        },
        {
            duration: 0.6,
            opacity: 1,
            scale: 1,
            y: 0,
            ease: "bounce.out",
            stagger: 0.1
        }, 
        "-=0.4"
    )

    // 7. –ü–æ—Å—ã–ø–∞–Ω–∏–µ –ø–æ—Å—ã–ø–∫–∏
    .fromTo('.sprinkle', 
        {
            opacity: 0,
            scale: 0,
            y: -100,
            rotation: 0
        },
        {
            duration: 1.2,
            opacity: 1,
            scale: 1,
            y: 0,
            rotation: 360,
            ease: "bounce.out",
            stagger: {
                each: 0.08,
                from: "random"
            }
        }, 
        "-=0.3"
    )

    // 8. –ü–æ—è–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å –∫—Ä–µ–º–æ–º
    .fromTo('.intro-simple-title', 
        {
            opacity: 0,
            y: 30,
            scale: 0.9
        },
        {
            duration: 3,
            opacity: 1,
            y: 0,
            scale: 1,
            ease: "back.out(1.7)"
        }, 
        "-=3"
    )

    // 10. –ü–∞—É–∑–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è (7 —Å–µ–∫—É–Ω–¥)
    .set({}, {}, "+=7")

    // 11. –°–∫—Ä—ã—Ç–∏–µ –≤—Å–µ–π –∞–Ω–∏–º–∞—Ü–∏–∏
    .to('#cake-intro', 
        {
            duration: 0.5,
            opacity: 0,
            scale: 1.05,
            ease: "power2.inOut"
        }
    )
    .set('#cake-intro', { display: 'none' });

    return tl;
}

// –î–æ–±–∞–≤–ª—è–µ–º –ø–ª–∞–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–Ω—Ç—Ä–æ
document.addEventListener('DOMContentLoaded', () => {
    const introOverlay = document.getElementById('cake-intro');
    const container = document.querySelector('.container');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
    function shouldShowIntro() {
        return true; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    }
    
    if (shouldShowIntro() && introOverlay) {
        // –°–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤–æ –≤—Ä–µ–º—è –∏–Ω—Ç—Ä–æ
        gsap.set(container, { opacity: 0, y: 30 });
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º GSAP –∞–Ω–∏–º–∞—Ü–∏—é —Ç–æ—Ä—Ç–∞
        const cakeAnimation = createCakeAnimation();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
        cakeAnimation.eventCallback("onComplete", () => {
            gsap.to(container, {
                duration: 0.3,
                opacity: 1,
                y: 0,
                ease: "power2.out"
            });
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ –æ—á–µ—Ä–µ–¥–∏
            const elements = document.querySelectorAll('#about-us, #gallery, .constructor-step, .total-price-section, #contact');
            gsap.fromTo(elements, 
                {
                    opacity: 0,
                    y: 10
                },
                {
                    duration: 0.3,
                    opacity: 1,
                    y: 0,
                    ease: "power2.out",
                    stagger: 0.05,
                    delay: 0.05
                }
            );
        });
        
    } else {
        // –£–±–∏—Ä–∞–µ–º –∏–Ω—Ç—Ä–æ –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤
        if (introOverlay) {
            introOverlay.style.display = 'none';
        }
        
        // –û–±—ã—á–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤
        gsap.fromTo(container, 
            { opacity: 0, y: 10 },
            { duration: 0.3, opacity: 1, y: 0, ease: "power2.out", delay: 0.05 }
        );
        
        const elements = document.querySelectorAll('#about-us, #gallery, .constructor-step, .total-price-section, #contact');
        gsap.fromTo(elements, 
            { opacity: 0, y: 10 },
            {
                duration: 0.3,
                opacity: 1,
                y: 0,
                ease: "power2.out",
                stagger: 0.05,
                delay: 0.1
            }
        );
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞ (—Ç–µ–ø–µ—Ä—å –Ω–µ –Ω—É–∂–Ω–æ, –∞–Ω–∏–º–∞—Ü–∏—è –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö)
    // window.addEventListener('resize', () => {
    //     if (!shouldShowIntro() && introOverlay) {
    //         introOverlay.style.display = 'none';
    //     }
    // });
});